
CC=gcc
MKDEP=./mkdep
PREFIX?=/usr

PROJECT=thekraken
CFLAGS=-Wall -Wshadow -O2 -D_GNU_SOURCE $(EXTRA_CFLAGS)
LDFLAGS=$(EXTRA_LDFLAGS)
#LDFLAGS=-Wl,--hash-style=both
LIBS=
SOURCES=$(PROJECT).c
HEADERS=build.h

OBJECTS=$(SOURCES:.c=.o)

all: $(PROJECT)

install: $(PROJECT)
	install -ps $(PROJECT) $(PREFIX)/bin

uninstall:
	/bin/rm -f $(PREFIX)/bin/$(PROJECT)

$(PROJECT): .depend $(OBJECTS)
	echo "/* this file is autogenerated */" > build_info.h
	echo "#define BUILD_INFO \"(compiled `date` by `whoami`@`hostname`)\"" >> build_info.h
	$(CC) $(CFLAGS) -c -o build.o build.c
	$(CC) $(LDFLAGS) -o $@ $(OBJECTS) build.o $(LIBS)

.depend dep: version.h $(SOURCES) $(HEADERS)
	$(MKDEP) $(CFLAGS) $(SOURCES)

clean:
	/bin/rm -f $(OBJECTS) build.o $(PROJECT)
	
distclean: clean
	/bin/rm -f *.o *~ *.orig *.rej .depend core core.[0-9]* DEADJOE version.h $(PROJECT) build_info.h *.i thekraken*.log thekraken.cfg

version.h: VERSION
	echo "/* this file is autogenerated */" > version.h
	echo "#define VERSION \"`cat VERSION`\"" >> version.h

.PHONY: clean distclean dep all build.o install
